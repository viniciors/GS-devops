trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Nome do artifact que será publicado
  artifactName: 'drop'

  # Service Connection do Azure DevOps
  azureSubscription: 'AzureConnection'        # nome da sua Service Connection

  # Resource Group e App Service
  azureResourceGroup: 'rg-gs-demo'
  azureWebAppName: 'gs-app'

  # Variáveis do Azure SQL
  azureSqlServer: 'servidor-sqldb-gs-demo'    # sem “.database.windows.net”
  azureSqlDatabase: 'sqldb-gs-demo'
  sqlUser: 'adm@servidor-sqldb-gs-demo'
  sqlPassword: '@Gs12345'

  # Monta a JDBC URL completa:
  CONNECTION_STRING: >-
    jdbc:sqlserver://$(azureSqlServer).database.windows.net:1433;
    database=$(azureSqlDatabase);
    user=$(sqlUser);
    password=$(sqlPassword);
    encrypt=true;
    trustServerCertificate=false;
    hostNameInCertificate=*.database.windows.net;
    loginTimeout=30;

jobs:
  - job: Build
    displayName: 'Build do projeto e publica JAR'
    steps:
      - task: Maven@3
        displayName: 'Compilar com Maven'
        inputs:
          mavenPomFile: 'demo/pom.xml'
          goals: 'clean package'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'

      - task: CopyFiles@2
        displayName: 'Copiar JAR para ArtifactStagingDirectory'
        inputs:
          contents: 'demo/target/*.jar'
          targetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publicar artefato drop'
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: '$(artifactName)'
          publishLocation: 'Pipeline'

  - job: Deploy
    displayName: 'Download do artifact e deploy no App Service'
    dependsOn: Build
    steps:
      - download: current

      - script: |
          echo "=== Conteúdo de $(Pipeline.Workspace) ==="
          ls -R $(Pipeline.Workspace)
        displayName: 'Listar arquivos em Pipeline.Workspace'

      - task: AzureWebApp@1
        displayName: 'Deploy do JAR no Azure Web App'
        inputs:
          azureSubscription: '$(azureSubscription)'
          appName: '$(azureWebAppName)'
          resourceGroupName: '$(azureResourceGroup)'
          package: '$(Pipeline.Workspace)/drop/*.jar'
          appSettings: |
            -WEBSITE_RUN_FROM_PACKAGE 1
          configurationStrings: |
            # define no App Service uma Connection String chamada "Demosqldb"
            Demosqldb:$(CONNECTION_STRING)
